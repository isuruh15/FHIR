{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./src/pages/guides/FHIRBulkOperations.md"],"names":["children","title","tabs","shouldHideHeader","className","cx","id","text","relativePagePath","repositoryProp","repository","baseUrl","href","row","render","this","slug","currentTab","pageTabs","tab","slugifiedTab","slugify","lower","selected","key","to","tabsContainer","list","React","Component","pageContext","location","frontmatter","scrollDirection","useScrollDirection","pathPrefix","homepage","label","padded","module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-guides-fhir-bulk-operations-md-e22d112b5be71a3710ec.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"text\":\"PageHeader-module--text--o9LFq\",\"pageHeaderSticky\":\"PageHeader-module--page-header--sticky--1ElAE\",\"pageHeaderShifted\":\"PageHeader-module--page-header--shifted--1sRXO\"};","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/FHIR/FHIR/fhir/docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h1>\n    <p>{`The IBM FHIR Server has extended operations for Bulk Data `}<inlineCode parentName=\"p\">{`$import`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`$export`}</inlineCode>{`, which are implemented in the modules: `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Module`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"https://github.com/IBM/FHIR/tree/master/fhir-operation-bulkdata\"\n            }}>{`fhir-operation-bulkdata`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Implements the FHIR Operations `}<inlineCode parentName=\"td\">{`$import`}</inlineCode>{` and `}<inlineCode parentName=\"td\">{`$export`}</inlineCode>{` and translate bulk data requests into JSR352 Java Batch jobs`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"https://github.com/IBM/FHIR/tree/master/fhir-bulkimportexport-webapp\"\n            }}>{`fhir-bulkimportexport-webapp`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Standalone web application to process bulk data requests as JSR352 Java Batch jobs`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`The IBM FHIR Server bulk data module configuration is described in more detail at the `}<a parentName=\"p\" {...{\n        \"href\": \"https://ibm.github.io/FHIR/guides/FHIRServerUsersGuide/#410-bulk-data-operations\"\n      }}>{`FHIR Server Users Guide`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"export-operation-export\"\n    }}>{`Export Operation: $export`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`$export`}</inlineCode>{` operation uses three OperationDefinition: `}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://hl7.org/fhir/uv/bulkdata/STU1/OperationDefinition-export.html\"\n        }}>{`System`}</a>{` - Export data from the server. Exports to an S3-compatible data store.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://hl7.org/fhir/uv/bulkdata/STU1/OperationDefinition-patient-export.html\"\n        }}>{`Patient`}</a>{` - Obtain a set of resources pertaining to all patients. Exports to an S3-compatible data store.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://hl7.org/fhir/uv/bulkdata/STU1/OperationDefinition-group-export.html\"\n        }}>{`Group`}</a>{` - Obtain a set of resources pertaining to patients in a specific Group. Only supports static membership; does not resolve inclusion/exclusion criteria.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"export-create-a-bulk-data-request\"\n    }}><strong parentName=\"h3\">{`$export: Create a Bulk Data Request`}</strong></h3>\n    <p>{`To create an import request, the IBM FHIR Server requires the body fields of the request object to be a FHIR Resource `}<inlineCode parentName=\"p\">{`Parameters`}</inlineCode>{` JSON Object.  The request must be posted to the server using `}<inlineCode parentName=\"p\">{`POST`}</inlineCode>{`. Each request is limited to a single resource type in each imported or referenced file.`}</p>\n    <h4 {...{\n      \"id\": \"example-request---get\"\n    }}>{`Example Request - GET`}</h4>\n    <p>{`The following is a request to export data to the IBM COS endpoint from the IBM FHIR Server using GET.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`curl -k -u \"fhiruser:change-password\" -H \"Content-Type: application/fhir+json\" -X GET 'https://localhost:9443/fhir-server/api/v4/$export?_outputFormat=application/fhir%2Bndjson&_type=Patient' -v\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"example-request---post\"\n    }}>{`Example Request - POST`}</h4>\n    <p>{`The following is a request to export data to the IBM COS endpoint from the IBM FHIR Server using POST and FHIR Resource Parameters.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`curl -k -u \"fhiruser:change-password\" -H \"Content-Type: application/fhir+json\" -X POST 'https://localhost:9443/fhir-server/api/v4/$export' -d '{\n    \"resourceType\": \"Parameters\",\n    \"id\": \"e33a6a4e-29b5-4f62-a3e9-8d09f50ae54d\",\n    \"parameter\": [\n        {\n            \"name\": \"_outputFormat\",\n            \"valueString\": \"application/fhir+ndjson\"\n        },\n        {\n            \"name\": \"_since\",\n            \"valueInstant\": \"2019-01-01T08:21:26.94-04:00\"\n        },\n        {\n            \"name\": \"_type\",\n            \"valueString\": \"Observation,Condition\"\n        }\n    ]\n}'\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"import-operation-import\"\n    }}>{`Import Operation: $import`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`$import`}</inlineCode>{` operation is a system-level operation invoked at `}<inlineCode parentName=\"p\">{`[base]/$import`}</inlineCode>{`. The Import Operation uses a custom crafted OperationDefinition `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/FHIR/blob/master/fhir-operation-bulkdata/src/main/resources/import.json\"\n      }}>{`link`}</a>{`, which follows the proposal from `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/smart-on-fhir/bulk-import/blob/master/import.md\"\n      }}>{`Smart-on-FHIR: import.md`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"import-create-a-bulk-data-request\"\n    }}><strong parentName=\"h3\">{`$import: Create a Bulk Data Request`}</strong></h3>\n    <p>{`To create an import request, the IBM FHIR Server requires the body fields of the request object to be a FHIR Resource `}<inlineCode parentName=\"p\">{`Parameters`}</inlineCode>{` JSON Object.  The request must be posted to the server using `}<inlineCode parentName=\"p\">{`POST`}</inlineCode>{`. Each input url in the request is limited to a single resource type.`}</p>\n    <p>{`The IBM FHIR Server limits the number of inputs per each `}<inlineCode parentName=\"p\">{`$import`}</inlineCode>{` request based on `}<inlineCode parentName=\"p\">{`fhirServer/bulkdata/maxInputPerRequest`}</inlineCode>{`, which defaults to 5 input entries.`}</p>\n    <p>{`The IBM FHIR Server supports `}<inlineCode parentName=\"p\">{`storageDetail.type`}</inlineCode>{` with the value of `}<inlineCode parentName=\"p\">{`ibm-cos`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`https`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`aws-s3`}</inlineCode>{`.\nTo import using the $import on https, one must additionally configure the fhirServer/bulkdata/validBaseUrls. For example, if one stores bulkdata on `}<a parentName=\"p\" {...{\n        \"href\": \"https://test-url.ibm.com/folder1\"\n      }}>{`https://test-url.ibm.com/folder1`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://test-url.ibm.com/folder2\"\n      }}>{`https://test-url.ibm.com/folder2`}</a>{` you must specify both baseUrls. Please refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"https://ibm.github.io/FHIR/guides/FHIRServerUsersGuide#410-bulk-data-operations\"\n      }}>{`IBM FHIR Server User’s Guide`}</a></p>\n    <h4 {...{\n      \"id\": \"example-request\"\n    }}>{`Example Request`}</h4>\n    <p>{`The following is a request to load data from the IBM COS endpoint into the IBM FHIR Server.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`curl -k -v -X POST -u \"fhiruser:change-password\" -H 'Content-Type: application/fhir+json' 'https://localhost:9443/fhir-server/api/v4/$import' -d '{\n    \"resourceType\": \"Parameters\",\n    \"id\": \"30321130-5032-49fb-be54-9b8b82b2445a\",\n    \"parameter\": [\n        {\n            \"name\": \"inputFormat\",\n            \"valueString\": \"application/fhir+ndjson\"\n        },\n        {\n            \"name\": \"inputSource\",\n            \"valueUri\": \"https://localhost:9443/source-fhir-server\"\n        },\n        {\n            \"name\": \"input\",\n            \"part\": [\n                {\n                    \"name\": \"type\",\n                    \"valueString\": \"Patient\"\n                },\n                {\n                    \"name\": \"url\",\n                    \"valueUrl\": \"test-import.ndjson\"\n                }\n            ]\n        },\n        {\n            \"name\": \"storageDetail\",\n            \"valueString\": \"ibm-cos\"\n        }\n    ]\n}'\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"example-response\"\n    }}>{`Example Response`}</h4>\n    <p>{`The response body is populated only on error, the response status code is 202 and the `}<inlineCode parentName=\"p\">{`content-location`}</inlineCode>{` is populated with the polling location in a response header:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`Content-Location: https://localhost:9443/fhir-server/api/v4/$bulkdata-status?job=JKyViJ5Y0zcqQ2Uv1aBSMw%3D%3D\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"status-operation-bulkdata-status\"\n    }}>{`Status Operation: $bulkdata-status`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`StatusOperation`}</inlineCode>{` is a BulkData Management endpoint, which uses the `}<inlineCode parentName=\"p\">{`Content-Location`}</inlineCode>{`’s http query parameter value for job to manage the Bulk Data job request.`}</p>\n    <p>{`There are two custom features - `}<em parentName=\"p\">{`Poll Job`}</em>{` and `}<em parentName=\"p\">{`Delete Job`}</em>{`.`}</p>\n    <h3 {...{\n      \"id\": \"bulkdata-status-poll-job\"\n    }}><strong parentName=\"h3\">{`$bulkdata-status: Poll Job`}</strong></h3>\n    <p>{`The response returned is 202 if the job is queued or not yet complete.\nThe response returned is 200 if the job is completed.`}</p>\n    <h4 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`Request`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`curl -k -v -u \"fhiruser:change-password\" 'https://localhost:9443/fhir-server/api/v4/$bulkdata-status?job=FvHrLGPv0oKZNyLzBnY5iA%3D%3D'\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Response for `}<inlineCode parentName=\"p\">{`$import`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`$export`}</inlineCode>{` not yet complete\nThe response code is 202.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Response for $export upon completion`}</p>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`{\n\"transactionTime\": \"2020/01/20 16:53:41.160 -0500\",\n\"request\": \"/$export?_type=Patient\",\n\"requiresAccessToken\": false,\n\"output\" : [\n  { \"type\" : \"AllergyIntolerance\",\n      \"url\": \"https://s3.us-south.cloud-object-storage.appdomain.cloud/fhir-bulkimexport-connectathon/6SfXzbGvYl1nTjGbf5qeqJDFNjyljiGdKxXEJb4yJn8=/AllergyIntolerance_1.ndjson\",\n    \"count\": 20},\n  { \"type\" : \"AllergyIntolerance\",\n      \"url\": \"https://s3.us-south.cloud-object-storage.appdomain.cloud/fhir-bulkimexport-connectathon/6SfXzbGvYl1nTjGbf5qeqJDFNjyljiGdKxXEJb4yJn8=/AllergyIntolerance_2.ndjson\",\n    \"count\": 8},\n  { \"type\" : \"Observation\",\n      \"url\": \"https://s3.us-south.cloud-object-storage.appdomain.cloud/fhir-bulkimexport-connectathon/6SfXzbGvYl1nTjGbf5qeqJDFNjyljiGdKxXEJb4yJn8=/Observation_1.ndjson\",\n    \"count\": 234},\n  { \"type\" : \"Observation\",\n      \"url\": \"https://s3.us-south.cloud-object-storage.appdomain.cloud/fhir-bulkimexport-connectathon/6SfXzbGvYl1nTjGbf5qeqJDFNjyljiGdKxXEJb4yJn8=/Observation_2.ndjson\",\n    \"count\": 81}]\n}\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Response for $import upon completion`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`{\n    \"transactionTime\": \"2020-04-28T13:13:01.366-04:00\",\n    \"request\": \"$import\",\n    \"requiresAccessToken\": false,\n    \"output\": [\n        {\n            \"type\": \"OperationOutcome\",\n            \"url\": \"test-import.ndjson_oo_success.ndjson\",\n            \"count\": 3\n        }\n    ],\n    \"error\": [\n        {\n            \"type\": \"OperationOutcome\",\n            \"url\": \"test-import.ndjson_oo_errors.ndjson\",\n            \"count\": 0\n        }\n    ]\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"bulkdata-status-delete-job\"\n    }}><strong parentName=\"h3\">{`$bulkdata-status: Delete Job`}</strong></h3>\n    <p>{`The Bulk Data Request is deleted using the Content-Location and executing the `}<inlineCode parentName=\"p\">{`DELETE`}</inlineCode>{` method. The deletion of a job is asynchronous - the job is stopped and subsequently deleted.  The data is not cleaned up from the destination storage location - e.g. partially imported data or partially exported data is not cleaned up. `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Request`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`curl -k -v -u \"fhiruser:change-password\" -X DELETE 'https://localhost:9443/fhir-server/api/v4/$bulkdata-status?job=k%2Fd8cTAU%2BUeVEwqURPZ3oA%3D%3D'\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Response\nThe response returned is 202 if the job deletion is not yet complete.\nThe response returned is 200 if the job deletion is completed.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"notes\"\n    }}>{`Notes`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`For status codes, if there is an error on the server a 500 is returned, or if there is a client request error, a 400 is returned. `}</li>\n      <li parentName=\"ol\">{`There are integration tests which exercise the various features of the Bulk Data Operations - `}<inlineCode parentName=\"li\">{`ImportOperationTest`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`ExportOperationTest`}</inlineCode>{`.  These integration tests are useful for testing the IBM FHIR Server, and may be useful for developers wanting to build their own tests. `}</li>\n      <li parentName=\"ol\">{`Depending on the access policy of your export location, one may download the content using a command like `}<inlineCode parentName=\"li\">{`curl -o Patient_1.ndjson https://s3.us-south.cloud-object-storage.appdomain.cloud/fhir-r4-connectathon/path-path/Patient_1.ndjson`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`The use of Basic Authentication `}<inlineCode parentName=\"li\">{`fhiruser:change-password`}</inlineCode>{` is expected to be changed to match your environment authentication routine.`}</li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}