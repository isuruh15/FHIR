(window.webpackJsonp=window.webpackJsonp||[]).push([[15,18],{"013z":function(e,t,a){"use strict";a("HQhv"),a("sC2a");var n=a("qKvR"),r=a("pOBw"),o=a("q1tI"),i=a.n(o),s=a("huSw"),l=a("t0dz"),p=a.n(l),b=a("Bfmn"),c=a("a7k6"),u=a("TSYQ"),d=a.n(u),m=a("QH2O"),h=function(e){var t,a=e.children,r=e.title,o=e.tabs,i=void 0===o?[]:o,s=e.shouldHideHeader;return Object(n.b)("div",{className:d()((t={},t[m.pageHeader]=m.pageHeader,t[m.pageHeaderSticky]=i.length,t[m.pageHeaderShifted]=s,t))},Object(n.b)("div",{className:"bx--grid"},Object(n.b)("div",{className:"bx--row"},Object(n.b)("div",{className:"bx--col-lg-12"},Object(n.b)("h1",{id:"page-title",className:m.text},r)))),a)},j=a("Z3H1"),O=a("BAC9"),f=function(e){var t=e.relativePagePath,a=e.repository,r=j.data.site.siteMetadata.repository,o=a||r,i=o.baseUrl,s=i+"/tree/master"+o.subDirectory+"/src/pages"+t;return i?Object(n.b)("div",{className:"bx--row "+O.row},Object(n.b)("div",{className:"bx--col"},Object(n.b)("a",{className:O.link,href:s},"Edit this page on GitHub"))):null},g=a("FCXl"),N=a("Wbzz"),v=a("I8xM");var x=function(e){var t,a;function r(){return e.apply(this,arguments)||this}return a=e,(t=r).prototype=Object.create(a.prototype),t.prototype.constructor=t,t.__proto__=a,r.prototype.render=function(){var e=this.props,t=e.tabs,a=e.slug,r=a.split("/").filter(Boolean).slice(-1)[0],o=t.map((function(e){var t,o=p()(e,{lower:!0}),i=o===r,s=a.replace(r,o);return Object(n.b)("li",{key:e,className:d()((t={},t[v.selectedItem]=i,t),v.listItem)},Object(n.b)(N.Link,{className:v.link,to:""+s},e))}));return Object(n.b)("div",{className:v.tabsContainer},Object(n.b)("div",{className:"bx--grid"},Object(n.b)("div",{className:"bx--row"},Object(n.b)("div",{className:"bx--col-lg-12 bx--col-no-gutter"},Object(n.b)("nav",null,Object(n.b)("ul",{className:v.list},o))))))},r}(i.a.Component),T=a("MjG9");t.a=function(e){var t=e.pageContext,a=e.children,o=e.location,i=t.frontmatter,l=void 0===i?{}:i,u=t.relativePagePath,d=l.tabs,m=l.title,j=Object(b.c)(),O=!!d&&"down"===j,N=r.data.site.pathPrefix,v=N?o.pathname.replace(N,""):o.pathname,y=d?v.split("/").slice(-1)[0]||p()(d[0],{lower:!0}):"";return Object(n.b)(c.a,{shouldHideHeader:O,homepage:!1},Object(n.b)(h,{shouldHideHeader:O,title:m,label:"label",tabs:d},d&&Object(n.b)(x,{slug:v,tabs:d,currentTab:y})),Object(n.b)(T.a,{padded:!0},a,Object(n.b)(f,{relativePagePath:u})),Object(n.b)(g.a,{pageContext:t,location:o,slug:v,tabs:d,currentTab:y}),Object(n.b)(s.a,null))}},BAC9:function(e,t,a){e.exports={bxTextTruncateEnd:"EditLink-module--bx--text-truncate--end--2pqje",bxTextTruncateFront:"EditLink-module--bx--text-truncate--front--3_lIE",link:"EditLink-module--link--1qzW3",row:"EditLink-module--row--1B9Gk"}},I8xM:function(e,t,a){e.exports={bxTextTruncateEnd:"PageTabs-module--bx--text-truncate--end--267NA",bxTextTruncateFront:"PageTabs-module--bx--text-truncate--front--3xEQF",tabsContainer:"PageTabs-module--tabs-container--8N4k0",list:"PageTabs-module--list--3eFQc",listItem:"PageTabs-module--list-item--nUmtD",link:"PageTabs-module--link--1mDJ1",selectedItem:"PageTabs-module--selected-item--YPVr3"}},QH2O:function(e,t,a){e.exports={bxTextTruncateEnd:"PageHeader-module--bx--text-truncate--end--mZWeX",bxTextTruncateFront:"PageHeader-module--bx--text-truncate--front--3zvrI",pageHeader:"PageHeader-module--page-header--3hIan",text:"PageHeader-module--text--o9LFq",pageHeaderSticky:"PageHeader-module--page-header--sticky--1ElAE",pageHeaderShifted:"PageHeader-module--page-header--shifted--1sRXO"}},Z3H1:function(e){e.exports=JSON.parse('{"data":{"site":{"siteMetadata":{"repository":{"baseUrl":"https://github.com/IBM/FHIR","subDirectory":"/docs"}}}}}')},chC4:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return i})),a.d(t,"default",(function(){return p}));a("E5k/"),a("rzGZ"),a("Dq+y"),a("8npG"),a("Ggvi"),a("qKvR"),a("q1tI");var n=a("E/Ix"),r=a("013z");function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}var i={},s={_frontmatter:i},l=r.a;function p(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,["components"]);return Object(n.b)(l,o({},s,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"overview"},"Overview"),Object(n.b)("p",null,"The IBM FHIR Server has extended operations for Bulk Data ",Object(n.b)("inlineCode",{parentName:"p"},"$import")," and ",Object(n.b)("inlineCode",{parentName:"p"},"$export"),", which are implemented in the modules: "),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",o({parentName:"tr"},{align:null}),"Module"),Object(n.b)("th",o({parentName:"tr"},{align:null}),"Description"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",o({parentName:"tr"},{align:null}),Object(n.b)("a",o({parentName:"td"},{href:"https://github.com/IBM/FHIR/tree/master/fhir-operation-bulkdata"}),"fhir-operation-bulkdata")),Object(n.b)("td",o({parentName:"tr"},{align:null}),"Implements the FHIR Operations ",Object(n.b)("inlineCode",{parentName:"td"},"$import")," and ",Object(n.b)("inlineCode",{parentName:"td"},"$export")," and translate bulk data requests into JSR352 Java Batch jobs")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",o({parentName:"tr"},{align:null}),Object(n.b)("a",o({parentName:"td"},{href:"https://github.com/IBM/FHIR/tree/master/fhir-bulkimportexport-webapp"}),"fhir-bulkimportexport-webapp")),Object(n.b)("td",o({parentName:"tr"},{align:null}),"Standalone web application to process bulk data requests as JSR352 Java Batch jobs")))),Object(n.b)("p",null,"The IBM FHIR Server bulk data module configuration is described in more detail at the ",Object(n.b)("a",o({parentName:"p"},{href:"https://ibm.github.io/FHIR/guides/FHIRServerUsersGuide/#410-bulk-data-operations"}),"FHIR Server Users Guide"),"."),Object(n.b)("h2",{id:"export-operation-export"},"Export Operation: $export"),Object(n.b)("p",null,"The ",Object(n.b)("inlineCode",{parentName:"p"},"$export")," operation uses three OperationDefinition: "),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",o({parentName:"li"},{href:"http://hl7.org/fhir/uv/bulkdata/STU1/OperationDefinition-export.html"}),"System")," - Export data from the server. Exports to an S3-compatible data store."),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",o({parentName:"li"},{href:"http://hl7.org/fhir/uv/bulkdata/STU1/OperationDefinition-patient-export.html"}),"Patient")," - Obtain a set of resources pertaining to all patients. Exports to an S3-compatible data store."),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",o({parentName:"li"},{href:"http://hl7.org/fhir/uv/bulkdata/STU1/OperationDefinition-group-export.html"}),"Group")," - Obtain a set of resources pertaining to patients in a specific Group. Only supports static membership; does not resolve inclusion/exclusion criteria.")),Object(n.b)("h3",{id:"export-create-a-bulk-data-request"},Object(n.b)("strong",{parentName:"h3"},"$export: Create a Bulk Data Request")),Object(n.b)("p",null,"To create an import request, the IBM FHIR Server requires the body fields of the request object to be a FHIR Resource ",Object(n.b)("inlineCode",{parentName:"p"},"Parameters")," JSON Object.  The request must be posted to the server using ",Object(n.b)("inlineCode",{parentName:"p"},"POST"),". Each request is limited to a single resource type in each imported or referenced file."),Object(n.b)("h4",{id:"example-request---get"},"Example Request - GET"),Object(n.b)("p",null,"The following is a request to export data to the IBM COS endpoint from the IBM FHIR Server using GET."),Object(n.b)("pre",null,Object(n.b)("code",o({parentName:"pre"},{className:"language-sh"}),'curl -k -u "fhiruser:change-password" -H "Content-Type: application/fhir+json" -X GET \'https://localhost:9443/fhir-server/api/v4/$export?_outputFormat=application/fhir%2Bndjson&_type=Patient\' -v\n')),Object(n.b)("h4",{id:"example-request---post"},"Example Request - POST"),Object(n.b)("p",null,"The following is a request to export data to the IBM COS endpoint from the IBM FHIR Server using POST and FHIR Resource Parameters."),Object(n.b)("pre",null,Object(n.b)("code",o({parentName:"pre"},{className:"language-sh"}),'curl -k -u "fhiruser:change-password" -H "Content-Type: application/fhir+json" -X POST \'https://localhost:9443/fhir-server/api/v4/$export\' -d \'{\n    "resourceType": "Parameters",\n    "id": "e33a6a4e-29b5-4f62-a3e9-8d09f50ae54d",\n    "parameter": [\n        {\n            "name": "_outputFormat",\n            "valueString": "application/fhir+ndjson"\n        },\n        {\n            "name": "_since",\n            "valueInstant": "2019-01-01T08:21:26.94-04:00"\n        },\n        {\n            "name": "_type",\n            "valueString": "Observation,Condition"\n        }\n    ]\n}\'\n')),Object(n.b)("h2",{id:"import-operation-import"},"Import Operation: $import"),Object(n.b)("p",null,"The ",Object(n.b)("inlineCode",{parentName:"p"},"$import")," operation is a system-level operation invoked at ",Object(n.b)("inlineCode",{parentName:"p"},"[base]/$import"),". The Import Operation uses a custom crafted OperationDefinition ",Object(n.b)("a",o({parentName:"p"},{href:"https://github.com/IBM/FHIR/blob/master/fhir-operation-bulkdata/src/main/resources/import.json"}),"link"),", which follows the proposal from ",Object(n.b)("a",o({parentName:"p"},{href:"https://github.com/smart-on-fhir/bulk-import/blob/master/import.md"}),"Smart-on-FHIR: import.md"),"."),Object(n.b)("h3",{id:"import-create-a-bulk-data-request"},Object(n.b)("strong",{parentName:"h3"},"$import: Create a Bulk Data Request")),Object(n.b)("p",null,"To create an import request, the IBM FHIR Server requires the body fields of the request object to be a FHIR Resource ",Object(n.b)("inlineCode",{parentName:"p"},"Parameters")," JSON Object.  The request must be posted to the server using ",Object(n.b)("inlineCode",{parentName:"p"},"POST"),". Each input url in the request is limited to a single resource type."),Object(n.b)("p",null,"The IBM FHIR Server limits the number of inputs per each ",Object(n.b)("inlineCode",{parentName:"p"},"$import")," request based on ",Object(n.b)("inlineCode",{parentName:"p"},"fhirServer/bulkdata/maxInputPerRequest"),", which defaults to 5 input entries."),Object(n.b)("p",null,"The IBM FHIR Server supports ",Object(n.b)("inlineCode",{parentName:"p"},"storageDetail.type")," with the value of ",Object(n.b)("inlineCode",{parentName:"p"},"ibm-cos"),", ",Object(n.b)("inlineCode",{parentName:"p"},"https")," and ",Object(n.b)("inlineCode",{parentName:"p"},"aws-s3"),".\nTo import using the $import on https, one must additionally configure the fhirServer/bulkdata/validBaseUrls. For example, if one stores bulkdata on ",Object(n.b)("a",o({parentName:"p"},{href:"https://test-url.ibm.com/folder1"}),"https://test-url.ibm.com/folder1")," and ",Object(n.b)("a",o({parentName:"p"},{href:"https://test-url.ibm.com/folder2"}),"https://test-url.ibm.com/folder2")," you must specify both baseUrls. Please refer to the ",Object(n.b)("a",o({parentName:"p"},{href:"https://ibm.github.io/FHIR/guides/FHIRServerUsersGuide#410-bulk-data-operations"}),"IBM FHIR Server User’s Guide")),Object(n.b)("h4",{id:"example-request"},"Example Request"),Object(n.b)("p",null,"The following is a request to load data from the IBM COS endpoint into the IBM FHIR Server."),Object(n.b)("pre",null,Object(n.b)("code",o({parentName:"pre"},{className:"language-sh"}),'curl -k -v -X POST -u "fhiruser:change-password" -H \'Content-Type: application/fhir+json\' \'https://localhost:9443/fhir-server/api/v4/$import\' -d \'{\n    "resourceType": "Parameters",\n    "id": "30321130-5032-49fb-be54-9b8b82b2445a",\n    "parameter": [\n        {\n            "name": "inputFormat",\n            "valueString": "application/fhir+ndjson"\n        },\n        {\n            "name": "inputSource",\n            "valueUri": "https://localhost:9443/source-fhir-server"\n        },\n        {\n            "name": "input",\n            "part": [\n                {\n                    "name": "type",\n                    "valueString": "Patient"\n                },\n                {\n                    "name": "url",\n                    "valueUrl": "test-import.ndjson"\n                }\n            ]\n        },\n        {\n            "name": "storageDetail",\n            "valueString": "ibm-cos"\n        }\n    ]\n}\'\n')),Object(n.b)("h4",{id:"example-response"},"Example Response"),Object(n.b)("p",null,"The response body is populated only on error, the response status code is 202 and the ",Object(n.b)("inlineCode",{parentName:"p"},"content-location")," is populated with the polling location in a response header:"),Object(n.b)("pre",null,Object(n.b)("code",o({parentName:"pre"},{className:"language-sh"}),"Content-Location: https://localhost:9443/fhir-server/api/v4/$bulkdata-status?job=JKyViJ5Y0zcqQ2Uv1aBSMw%3D%3D\n")),Object(n.b)("h2",{id:"status-operation-bulkdata-status"},"Status Operation: $bulkdata-status"),Object(n.b)("p",null,"The ",Object(n.b)("inlineCode",{parentName:"p"},"StatusOperation")," is a BulkData Management endpoint, which uses the ",Object(n.b)("inlineCode",{parentName:"p"},"Content-Location"),"’s http query parameter value for job to manage the Bulk Data job request."),Object(n.b)("p",null,"There are two custom features - ",Object(n.b)("em",{parentName:"p"},"Poll Job")," and ",Object(n.b)("em",{parentName:"p"},"Delete Job"),"."),Object(n.b)("h3",{id:"bulkdata-status-poll-job"},Object(n.b)("strong",{parentName:"h3"},"$bulkdata-status: Poll Job")),Object(n.b)("p",null,"The response returned is 202 if the job is queued or not yet complete.\nThe response returned is 200 if the job is completed."),Object(n.b)("h4",{id:"example"},"Example"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Request")),Object(n.b)("pre",null,Object(n.b)("code",o({parentName:"pre"},{className:"language-sh"}),"curl -k -v -u \"fhiruser:change-password\" 'https://localhost:9443/fhir-server/api/v4/$bulkdata-status?job=FvHrLGPv0oKZNyLzBnY5iA%3D%3D'\n")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Response for ",Object(n.b)("inlineCode",{parentName:"p"},"$import")," or ",Object(n.b)("inlineCode",{parentName:"p"},"$export")," not yet complete\nThe response code is 202.")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Response for $export upon completion"))),Object(n.b)("pre",null,Object(n.b)("code",o({parentName:"pre"},{className:"language-sh"}),'{\n"transactionTime": "2020/01/20 16:53:41.160 -0500",\n"request": "/$export?_type=Patient",\n"requiresAccessToken": false,\n"output" : [\n  { "type" : "AllergyIntolerance",\n      "url": "https://s3.us-south.cloud-object-storage.appdomain.cloud/fhir-bulkimexport-connectathon/6SfXzbGvYl1nTjGbf5qeqJDFNjyljiGdKxXEJb4yJn8=/AllergyIntolerance_1.ndjson",\n    "count": 20},\n  { "type" : "AllergyIntolerance",\n      "url": "https://s3.us-south.cloud-object-storage.appdomain.cloud/fhir-bulkimexport-connectathon/6SfXzbGvYl1nTjGbf5qeqJDFNjyljiGdKxXEJb4yJn8=/AllergyIntolerance_2.ndjson",\n    "count": 8},\n  { "type" : "Observation",\n      "url": "https://s3.us-south.cloud-object-storage.appdomain.cloud/fhir-bulkimexport-connectathon/6SfXzbGvYl1nTjGbf5qeqJDFNjyljiGdKxXEJb4yJn8=/Observation_1.ndjson",\n    "count": 234},\n  { "type" : "Observation",\n      "url": "https://s3.us-south.cloud-object-storage.appdomain.cloud/fhir-bulkimexport-connectathon/6SfXzbGvYl1nTjGbf5qeqJDFNjyljiGdKxXEJb4yJn8=/Observation_2.ndjson",\n    "count": 81}]\n}\n')),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Response for $import upon completion")),Object(n.b)("pre",null,Object(n.b)("code",o({parentName:"pre"},{className:"language-sh"}),'{\n    "transactionTime": "2020-04-28T13:13:01.366-04:00",\n    "request": "$import",\n    "requiresAccessToken": false,\n    "output": [\n        {\n            "type": "OperationOutcome",\n            "url": "test-import.ndjson_oo_success.ndjson",\n            "count": 3\n        }\n    ],\n    "error": [\n        {\n            "type": "OperationOutcome",\n            "url": "test-import.ndjson_oo_errors.ndjson",\n            "count": 0\n        }\n    ]\n}\n')),Object(n.b)("h3",{id:"bulkdata-status-delete-job"},Object(n.b)("strong",{parentName:"h3"},"$bulkdata-status: Delete Job")),Object(n.b)("p",null,"The Bulk Data Request is deleted using the Content-Location and executing the ",Object(n.b)("inlineCode",{parentName:"p"},"DELETE")," method. The deletion of a job is asynchronous - the job is stopped and subsequently deleted.  The data is not cleaned up from the destination storage location - e.g. partially imported data or partially exported data is not cleaned up. "),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Request")),Object(n.b)("pre",null,Object(n.b)("code",o({parentName:"pre"},{className:"language-sh"}),"curl -k -v -u \"fhiruser:change-password\" -X DELETE 'https://localhost:9443/fhir-server/api/v4/$bulkdata-status?job=k%2Fd8cTAU%2BUeVEwqURPZ3oA%3D%3D'\n")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Response\nThe response returned is 202 if the job deletion is not yet complete.\nThe response returned is 200 if the job deletion is completed.")),Object(n.b)("h2",{id:"notes"},"Notes"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"For status codes, if there is an error on the server a 500 is returned, or if there is a client request error, a 400 is returned. "),Object(n.b)("li",{parentName:"ol"},"There are integration tests which exercise the various features of the Bulk Data Operations - ",Object(n.b)("inlineCode",{parentName:"li"},"ImportOperationTest")," and ",Object(n.b)("inlineCode",{parentName:"li"},"ExportOperationTest"),".  These integration tests are useful for testing the IBM FHIR Server, and may be useful for developers wanting to build their own tests. "),Object(n.b)("li",{parentName:"ol"},"Depending on the access policy of your export location, one may download the content using a command like ",Object(n.b)("inlineCode",{parentName:"li"},"curl -o Patient_1.ndjson https://s3.us-south.cloud-object-storage.appdomain.cloud/fhir-r4-connectathon/path-path/Patient_1.ndjson"),"."),Object(n.b)("li",{parentName:"ol"},"The use of Basic Authentication ",Object(n.b)("inlineCode",{parentName:"li"},"fhiruser:change-password")," is expected to be changed to match your environment authentication routine.")))}p.isMDXComponent=!0},pOBw:function(e){e.exports=JSON.parse('{"data":{"site":{"pathPrefix":"/FHIR"}}}')}}]);
//# sourceMappingURL=component---src-pages-guides-fhir-bulk-operations-md-e22d112b5be71a3710ec.js.map