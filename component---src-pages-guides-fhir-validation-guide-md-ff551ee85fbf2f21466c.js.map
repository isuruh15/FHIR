{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./src/pages/guides/FHIRValidationGuide.md","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss"],"names":["children","title","tabs","shouldHideHeader","className","cx","id","text","relativePagePath","repositoryProp","repository","baseUrl","href","row","render","this","slug","currentTab","pageTabs","tab","slugifiedTab","slugify","lower","selected","key","to","tabsContainer","list","React","Component","pageContext","location","frontmatter","scrollDirection","useScrollDirection","pathPrefix","homepage","label","padded","module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-guides-fhir-validation-guide-md-ff551ee85fbf2f21466c.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/FHIR/FHIR/fhir/docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`The IBM FHIR Server Validation module (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/FHIR/tree/master/fhir-validation\"\n      }}>{`fhir-validation`}</a>{`) provides Java APIs for validating FHIR resources using constraints specified in their corresponding structure definitions. For example, in the Patient resource, we have the following constraint:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@Constraint(\n    id = \"pat-1\",\n    level = \"Rule\",\n    location = \"Patient.contact\",\n    description = \"SHALL at least contain a contact's details or a reference to an organization\",\n    expression = \"name.exists() or telecom.exists() or address.exists() or organization.exists()\"\n)\n`}</code></pre>\n    <p>{`The validation component picks up the Java annotation, pulls out the FHIRPath expression and passes it on to the IBM FHIR Server FHIRPath component (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/FHIR/tree/master/fhir-path\"\n      }}>{`fhir-path`}</a>{`) for evaluation. If the invariant evaluates to `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{` then the FHIR validator will generate an OperationOutcome.Issue with the severity set relative to the “level” of the constraint (i.e. “Rule” or “Warning”);`}</p>\n    <img {...{\n      \"src\": \"https://ibm.github.io/FHIR/images/fhir-dependency-graph.png\",\n      \"alt\": \"https://ibm.github.io/FHIR/images/fhir-dependency-graph.png\"\n    }}></img>\n    <h2 {...{\n      \"id\": \"profile-support\"\n    }}>{`Profile Support`}</h2>\n    <p>{`The validation component will also validate a resource against profiles that it asserts conformance to in the `}<inlineCode parentName=\"p\">{`Resource.meta.profile`}</inlineCode>{` element assuming those profiles are available to the IBM FHIR Server via the FHIR registry component (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/FHIR/tree/master/fhir-registry\"\n      }}>{`fhir-registry`}</a>{`) at runtime.`}</p>\n    <p>{`Given a FHIR profile (structure definition) as input, the IBM FHIR Server Profile component (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/FHIR/tree/master/fhir-profile\"\n      }}>{`fhir-profile`}</a>{`) generates FHIRPath expressions for a number of different types of constraints. The current scope of constraint generation is:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Cardinality constraints (required and prohibited elements)`}</li>\n      <li parentName=\"ul\">{`Fixed value constraints (Code and Uri data types)`}</li>\n      <li parentName=\"ul\">{`Pattern value constraints (CodeableConcept daa type)`}</li>\n      <li parentName=\"ul\">{`Reference type constraints (FHIRPath resolve/is/conformsTo functions)`}</li>\n      <li parentName=\"ul\">{`Extension constraints (FHIRPath `}<inlineCode parentName=\"li\">{`conformsTo`}</inlineCode>{` function)`}</li>\n      <li parentName=\"ul\">{`Vocabulary constraints (FHIRPath `}<inlineCode parentName=\"li\">{`memberOf`}</inlineCode>{` function)`}</li>\n      <li parentName=\"ul\">{`Choice type constraints (FHIRPath `}<inlineCode parentName=\"li\">{`as`}</inlineCode>{` function)`}</li>\n    </ul>\n    <p>{`NOTE: there is currently no support for `}<inlineCode parentName=\"p\">{`closed`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`ordered`}</inlineCode>{` slices.`}</p>\n    <p>{`For example, the HL7 bodyweight profile has the following cardinality and fixed value constraints (some details removed for brevity):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"id\": \"Observation.code.coding:BodyWeightCode.system\",\n    \"path\": \"Observation.code.coding.system\",\n    \"min\": 1,\n    \"max\": \"1\",\n    \"type\": [{\n        \"code\": \"uri\"\n    }],\n    \"fixedUri\": \"http://loinc.org\"\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"id\": \"Observation.code.coding:BodyWeightCode.code\",\n    \"path\": \"Observation.code.coding.code\",\n    \"min\": 1,\n    \"max\": \"1\",\n    \"type\": [{\n        \"code\": \"code\"\n    }],\n    \"fixedCode\": \"29463-7\",\n}\n`}</code></pre>\n    <p>{`which are used by the ConstraintGenerator to generate the following FHIRPath expression:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`code.where(coding.where(system = 'http://loinc.org' and code = '29463-7').exists()).exists()\n`}</code></pre>\n    <p>{`The HL7 bodyweight profile has the following reference type constraint (some details removed for brevity):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"id\": \"Observation.subject\",\n    \"path\": \"Observation.subject\",\n    \"type\": [{\n        \"code\": \"Reference\",\n        \"targetProfile\": [\n            \"http://hl7.org/fhir/StructureDefinition/Patient\"\n        ]\n    }]      \n}\n`}</code></pre>\n    <p>{`which is used by the ConstraintGenerator to generate the following FHIRPath expression:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`subject.resolve().is(Patient)\n`}</code></pre>\n    <p>{`Complex reference types are also supported, for example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`derivedFrom.exists() implies (derivedFrom.all(resolve().is(DocumentReference) or resolve().is(ImagingStudy) or resolve().is(Media) or resolve().is(QuestionnaireResponse) or resolve().is(MolecularSequence) or resolve().conformsTo('http://hl7.org/fhir/StructureDefinition/vitalsigns')))\n`}</code></pre>\n    <p>{`is generated from the element definition `}<inlineCode parentName=\"p\">{`Observation.derivedFrom`}</inlineCode>{` in the same bodyweight profile.`}</p>\n    <p>{`FHIRPath based constraints specified in `}<inlineCode parentName=\"p\">{`StructureDefinition.snapshot.element.constraint`}</inlineCode>{` elements, will also be evaluated during profile validation. All of the constraints generated for a given profile are cached in memory so that they can be reused to validate multiple resources that are asserting conformance to the same profile.`}</p>\n    <h3 {...{\n      \"id\": \"making-profiles-available-to-the-fhir-registry-component-fhirregistry\"\n    }}>{`Making profiles available to the FHIR registry component (FHIRRegistry)`}</h3>\n    <p>{`The FHIR registry component keeps track of definitional resource types (e.g. StructureDefinition, ValueSet, CodeSystem, etc.). It uses the Java ServiceLoader to look for implementations of the FHIRRegistryResourceProvider interface:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public interface FHIRRegistryResourceProvider {\n    /**\n     * Get the registry resource from this provider for the given resource type, url and version\n     *\n     * <p>If the version is null, then the latest version of the registry resource is returned (if available)\n     *\n     * @param resourceType\n     *     the resource type of the registry resource\n     * @param url\n     *     the url of the registry resource\n     * @param version\n     *     the version of the registry resource (optional)\n     * @return\n     *     the registry resource from this provider for the given resource type, url and version if exists, null otherwise\n     */\n    FHIRRegistryResource getRegistryResource(Class<? extends Resource> resourceType, String url, String version);\n\n    /**\n     * Get the registry resources from this provider for the given resource type\n     *\n     * @param resourceType\n     *     the resource type of the registry resource\n     * @return\n     *     the registry resources from this provider for the given resource type\n     */\n    Collection<FHIRRegistryResource> getRegistryResources(Class<? extends Resource> resourceType);\n\n    /**\n     * Get all the registry resources from this provider\n     *\n     * @return\n     *     all of the registry resources from this provider\n     */\n    Collection<FHIRRegistryResource> getRegistryResources();\n\n    /**\n     * Get the profile resources from this provider that constrain the given resource type\n     *\n     * @param type\n     *     the constrained resource type\n     * @return\n     *     the profile resources from this provider that constrain the given resource type\n     */\n    Collection<FHIRRegistryResource> getProfileResources(String type);\n\n\n    /**\n     * Get the search parameter resources from this provider with the given search parameter type\n     * (e.g. string, token, etc.)\n     *\n     * @param type\n     *     the search parameter type\n     * @return\n     *     the search parameter resources from this provider with the given search parameter type\n     */\n    Collection<FHIRRegistryResource> getSearchParameterResources(String type);\n}\n`}</code></pre>\n    <p>{`Package your implementation in a jar file and be sure to include its fully-qualified classname in your jar’s\n`}<inlineCode parentName=\"p\">{`META-INF/services/com.ibm.fhir.registry.spi.FHIRRegistryResourceProvider`}</inlineCode>{`, then drop this jar in the server’s userlib directory to make it available to the server during startup.`}</p>\n    <h3 {...{\n      \"id\": \"npm-package-format-support\"\n    }}>{`NPM package format support`}</h3>\n    <p>{`The IBM FHIR Server Registry module (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/FHIR/tree/master/fhir-registry\"\n      }}>{`fhir-registry`}</a>{`) has utilities that can be used to expose FHIR registry resources that exist in the NPM package format. Implementation guides that follow this packaging format can be dropped into the `}<inlineCode parentName=\"p\">{`src/main/resources/`}</inlineCode>{` under a directory structure defined by the ImplementationGuide.packageId value. For example, US Core implementation guide has a package id of: `}<inlineCode parentName=\"p\">{`hl7.fhir.us.core`}</inlineCode>{`. The NPM “package” folder can be dropped here: `}<inlineCode parentName=\"p\">{`src/main/resources/hl7/fhir/us/core/package`}</inlineCode></p>\n    <img {...{\n      \"src\": \"https://ibm.github.io/FHIR/images/us-core-package.png\",\n      \"alt\": \"https://ibm.github.io/FHIR/images/us-core-package.png\"\n    }}></img>\n    <p>{`For convenience, we have created a base implementation of `}<inlineCode parentName=\"p\">{`FHIRRegistryResourceProvider`}</inlineCode>{` called `}<inlineCode parentName=\"p\">{`PackageRegistryResourceProvider`}</inlineCode>{`. The implementation of the `}<inlineCode parentName=\"p\">{`USCoreResourceProvider`}</inlineCode>{` using this implementation looks like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class USCoreResourceProvider extends PackageRegistryResourceProvider {\n    @Override\n    public String getPackageId() {\n        return \"hl7.fhir.us.core\";\n    }\n}\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`PackgageRegistryResourceProvider`}</inlineCode>{` class converts the packageId (e.g. hl7.fhir.us.core) to a path where it can find the NPM package index file: `}<inlineCode parentName=\"p\">{`.index.json`}</inlineCode>{`. The `}<inlineCode parentName=\"p\">{`PackageRegistryResourceProvider`}</inlineCode>{` class creates `}<inlineCode parentName=\"p\">{`FHIRRegistryResource`}</inlineCode>{` instances, using the index file, and caches them in a map on startup. The `}<inlineCode parentName=\"p\">{`PackageRegistryResource`}</inlineCode>{` (an implementation of `}<inlineCode parentName=\"p\">{`FHIRRegistryResource`}</inlineCode>{` class lazily loads the underlying FHIR resource into memory when it is accessed. Multiple versions of the same resource can be registered. FHIR registry resource providers can be bundled into a jar file and deployed with the IBM FHIR server in the user lib directory.`}</p>\n    <p>{`For more information, please see: `}<a parentName=\"p\" {...{\n        \"href\": \"https://confluence.hl7.org/display/FHIR/NPM+Package+Specification\"\n      }}>{`https://confluence.hl7.org/display/FHIR/NPM+Package+Specification`}</a></p>\n    <h3 {...{\n      \"id\": \"built-in-profile-support\"\n    }}>{`Built-in profile support`}</h3>\n    <p>{`The IBM FHIR server has built-in support for the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Profiles defined in the base FHIR Specification (v4.0.1: R4 - Mixed Normative and STU) `}<a parentName=\"li\" {...{\n          \"href\": \"http://hl7.org/fhir/profilelist.html\"\n        }}>{`http://hl7.org/fhir/profilelist.html`}</a></li>\n      <li parentName=\"ul\">{`US Core Implementation Guide (v3.1.0: STU3 Update) `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.hl7.org/fhir/us/core/index.html\"\n        }}>{`https://www.hl7.org/fhir/us/core/index.html`}</a></li>\n      <li parentName=\"ul\">{`CARIN Blue Button Implementation Guide (v0.1.0: STU1 Ballot 1) `}<a parentName=\"li\" {...{\n          \"href\": \"http://hl7.org/fhir/us/carin-bb/2020Feb/\"\n        }}>{`http://hl7.org/fhir/us/carin-bb/2020Feb/`}</a></li>\n      <li parentName=\"ul\">{`HL7 FHIR Implementation Guide: minimal Common Oncology Data Elements (mCODE) Release 1 - US Realm | STU1 (v1.0.0: STU 1) `}<a parentName=\"li\" {...{\n          \"href\": \"http://hl7.org/fhir/us/mcode/STU1/\"\n        }}>{`http://hl7.org/fhir/us/mcode/STU1/`}</a></li>\n      <li parentName=\"ul\">{`DaVinci Payer Data Exchange (PDEX) Plan Net Implementation Guide (v0.1.0: STU1 Ballot 1) `}<a parentName=\"li\" {...{\n          \"href\": \"http://hl7.org/fhir/us/davinci-pdex-plan-net/2020Feb/index.html\"\n        }}>{`http://hl7.org/fhir/us/davinci-pdex-plan-net/2020Feb/index.html`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"the-ibm-fhir-server-validate-operation\"\n    }}>{`The IBM FHIR Server $validate operation`}</h2>\n    <p>{`The IBM FHIR Server provides a basic implementation of the $validate operation that invokes the FHIRValidator via a REST API. The $validate operation will validate against the base specification and any profiles asserted in `}<inlineCode parentName=\"p\">{`Resource.meta.profile`}</inlineCode>{`. The optional `}<inlineCode parentName=\"p\">{`profile`}</inlineCode>{` parameter is not currently supported.`}</p>\n    <h2 {...{\n      \"id\": \"valueset-membership-checking-fhirpath-memberof-function\"\n    }}>{`ValueSet membership checking (FHIRPath `}<inlineCode parentName=\"h2\">{`memberOf`}</inlineCode>{` function)`}</h2>\n    <p>{`Coded elements (code, Coding, CodeableConcept data types), maybe have a binding element that specifies a ValueSet that that element is bound to. This means that the coded element must have a value that comes from that value set. The FHIR profile component will expand value sets according to the ValueSet `}<a parentName=\"p\" {...{\n        \"href\": \"http://hl7.org/fhir/valueset.html#expansion\"\n      }}>{`expansion algorithm`}</a>{` for ValueSets that include CodeSystem resources available via the FHIR registry component.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"text\":\"PageHeader-module--text--o9LFq\",\"pageHeaderSticky\":\"PageHeader-module--page-header--sticky--1ElAE\",\"pageHeaderShifted\":\"PageHeader-module--page-header--shifted--1sRXO\"};"],"sourceRoot":""}